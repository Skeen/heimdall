# pylint: disable=W9903
"""Commands from controlling Postfix."""

from core.management.DockerService import DockerService
from core.management.ServiceCommand import ServiceCommand
# TODO: Make custom postfix image, override variables, ect


class Command(DockerService, ServiceCommand):
    """Commands for controlling the Postfix mail relay.

    Examples:

        Starting the mail relay:

        .. code:: console

            $ python manage.py postfix start

            Postfix started!

        Stopping the mail relay:

        .. code:: console

            $ python manage.py postfix stop

            Postfix stopped!

        Getting mail relay status:

        .. code:: console

            $ python manage.py postfix status

            Postfix is (not) running

        Getting mail relay log:

        .. code:: console

            $ python manage.py postfix log

              ...

              * Starting Postfix Mail Transport Agent postfix
                ...done.

    Note:

        A running docker daemon is required to run the above commands.

        Installing docker can be done by following the guides present at:

        * https://docs.docker.com/engine/installation/
    """

    def start(self):
        # pylint: disable=no-name-in-module
        from heimdall.settings import EMAIL_BACKEND
        if EMAIL_BACKEND == 'django.core.mail.backends.smtp.EmailBackend':
            print "Warning: Project, already configured to use Postfix"
            print "Warning: Overriding current configuration!"

        super(Command, self).start()

    def setup_settings(self, container, portmap):
        print "Writing Postfix configuration to settings.py"

        # Server port
        port = portmap['25/tcp'][0]['HostPort']
        print "Postfix running on port: " + port

        # Setup path to our database
        # pylint: disable=no-name-in-module
        from heimdall.settings import BASE_DIR
        settings_file = BASE_DIR + '/heimdall/settings/components/email.py'

        with open(settings_file, "w") as settings:
            lines = [
                "# Autogenerated",
                '"""Configuration specific database settings."""',
                "",
                "# Postfix mailserver configuration",
                "#---------------------------------",
                "EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'",
                "EMAIL_HOST = 'localhost'",
                "EMAIL_PORT = " + str(port),
                "EMAIL_HOST_USER = ''",
                "EMAIL_HOST_PASSWORD = ''",
                "EMAIL_USE_TLS = False",
                "DEFAULT_FROM_EMAIL = 'UBSBolig <no-reply@ubsbolig.dk>'",
            ]
            for line in lines:
                settings.write(line + '\n')

    service_name = 'Postfix'
    help = 'Control the postfix mail relay'

    image = 'tozd/postfix:latest'
    ports = {
        '25/tcp': 25,
    }
